set nocursorline

set rtp+=/usr/local/opt/fzf

au BufRead,BufNewFile *.js set filetype=javascript
autocmd FileType typescript setlocal completeopt+=menu,preview
autocmd FileType typescript,javascript,html setlocal expandtab shiftwidth=2 softtabstop=2
autocmd FileType typescript,javascript,html setlocal iskeyword-=. iskeyword-=# iskeyword-=-

let g:tsuquyomi_completion_detail = 1
let g:tsuquyomi_disable_quickfix = 1
let g:syntastic_typescript_checkers = ['tsuquyomi']

let g:ackprg = 'ag --nogroup --column'

let g:deoplete#enable_at_startup = 1   "enable deoplete at vim startup
let g:deoplete#enable_ignore_case = 1  "let matcher ignore case
let g:deoplete#enable_smart_case = 1   "smart case
let g:deoplete#enable_fuzzy_completion = 1   "fuzzy match
let g:deoplete#omni#input_patterns = get(g:,'deoplete#omni#input_patterns',{})  "get default patterns where need to autocomplete
inoremap <expr><C-h> deolete#mappings#smart_close_popup()."\<C-h>"
inoremap <expr><BS> deoplete#mappings#smart_close_popup()."\<C-h>"

let g:netrw_keepdir = 1

map <C-e> :Texplore<CR>
map <C-s> :lopen<CR>
nmap <silent> <leader>d  <Plug>DashSearch

set clipboard=

function FuzzyFind()
  " Contains a null-byte that is stripped.
  let gitparent=system('git rev-parse --show-toplevel')[:-2]
  let boston=system('ls ' . gitparent . '/cordova')[:-2]
  if empty(matchstr(gitparent, '^fatal:.*'))
    if empty(matchstr(boston, 'No such file'))
      silent execute ':FZF ' . gitparent . '/cordova'
    else
      silent execute ':FZF ' . gitparent
    endif
  else
    silent execute ':FZF .'
  endif
endfunction

nnoremap <silent> <C-p> :call FuzzyFind()<CR>
